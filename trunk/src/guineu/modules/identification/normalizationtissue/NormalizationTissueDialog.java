/*
 * NormalizationDialog.java
 *
 * Created on 15 October 2008, 15:49
 */
package guineu.modules.identification.normalizationtissue;

import guineu.main.GuineuCore;
import guineu.util.dialogs.ExitCode;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  scsandra
 */
public class NormalizationTissueDialog extends javax.swing.JDialog implements ActionListener {

    private StandardUmol standards;
    ExitCode exit = ExitCode.UNKNOWN;
    private Logger logger = Logger.getLogger(this.getClass().getName());
    Vector<String> experimentNames;

    /** Creates new form NormalizationDialog */
    public NormalizationTissueDialog(StandardUmol standards, Vector<String> experimentNames) {
        super(GuineuCore.getDesktop().getMainFrame(),
                "Please fill the standards...", true);
        this.setSize(764, 435);
        this.standards = standards;
        this.experimentNames = experimentNames;
        initComponents();
        this.jButtonClose.addActionListener(this);
        this.jButtonNormalize.addActionListener(this);
        fillStandardsTextFields();
        logger.finest("Displaying Normalization Serum dialog");
    }

    public void fillStandardsTextFields() {
        try {
            this.jTextFieldCer.setText(String.valueOf(standards.Cer));
            this.jTextFieldGPCho.setText(String.valueOf(standards.GPCho));
            this.jTextFieldGPEtn.setText(String.valueOf(standards.GPEtn));
            this.jTextFieldLysoGPCho.setText(String.valueOf(standards.LysoGPCho));
            this.jTextFieldTAG.setText(String.valueOf(standards.TAG));
            this.jTextFieldother.setText(standards.other);
            this.jTextFieldOtherValue.setText(String.valueOf(standards.otherValue));
            this.jTextFieldother1.setText(standards.other1);
            this.jTextFieldOtherValue1.setText(String.valueOf(standards.otherValue1));

            DefaultTableModel d = (DefaultTableModel) this.jTable.getModel();
            int cont = 0;
            for (String name : experimentNames) {
              
                try {
                    Object[] row = new Object[2];                    
                    row[0] = name;
                    if (standards.Weights.containsKey(name)) {
                        row[1] = (Double)standards.Weights.get(name);
                    }                    
                    d.addRow(row);
                   
                    this.jTable.setEditingRow(cont++);
                    
                } catch (Exception e) {
                }
            }
            this.jTable.repaint();
        } catch (Exception e) {

        }
    }

    public boolean fillStandards() {
        try {
            this.standards.Cer = Double.valueOf(this.jTextFieldCer.getText());
            this.standards.GPCho = Double.valueOf(this.jTextFieldGPCho.getText());
            this.standards.GPEtn = Double.valueOf(this.jTextFieldGPEtn.getText());
            this.standards.LysoGPCho = Double.valueOf(this.jTextFieldLysoGPCho.getText());
            this.standards.TAG = Double.valueOf(this.jTextFieldTAG.getText());
            this.standards.other = this.jTextFieldother.getText();
            this.standards.otherValue = Double.valueOf(this.jTextFieldOtherValue.getText());
            this.standards.other1 = this.jTextFieldother1.getText();
            this.standards.otherValue1 = Double.valueOf(this.jTextFieldOtherValue1.getText());
            
            for(int i = 0; i < this.jTable.getRowCount(); i++){
                this.standards.Weights.put((String)this.jTable.getValueAt(i, 0), (Double)this.jTable.getValueAt(i, 1));
            }
            
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error, You have not introduced a correct value.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldother = new javax.swing.JTextField();
        jTextFieldother1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldCer = new javax.swing.JTextField();
        jTextFieldGPCho = new javax.swing.JTextField();
        jTextFieldLysoGPCho = new javax.swing.JTextField();
        jTextFieldGPEtn = new javax.swing.JTextField();
        jTextFieldTAG = new javax.swing.JTextField();
        jTextFieldOtherValue = new javax.swing.JTextField();
        jTextFieldOtherValue1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButtonNormalize = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Experiment Name", "Weight (mg)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(jTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("umol / l.blood sample  --- umol / g sample"));

        jPanel3.setLayout(new java.awt.GridLayout(7, 1, 0, 20));

        jLabel1.setText("Cer:");
        jPanel3.add(jLabel1);

        jLabel2.setText("PC:");
        jPanel3.add(jLabel2);

        jLabel3.setText("LysoPC:");
        jPanel3.add(jLabel3);

        jLabel4.setText("PE:");
        jPanel3.add(jLabel4);

        jLabel5.setText("TG:");
        jPanel3.add(jLabel5);
        jPanel3.add(jTextFieldother);
        jPanel3.add(jTextFieldother1);

        jPanel4.setLayout(new java.awt.GridLayout(7, 1, 20, 20));
        jPanel4.add(jTextFieldCer);
        jPanel4.add(jTextFieldGPCho);
        jPanel4.add(jTextFieldLysoGPCho);
        jPanel4.add(jTextFieldGPEtn);
        jPanel4.add(jTextFieldTAG);
        jPanel4.add(jTextFieldOtherValue);
        jPanel4.add(jTextFieldOtherValue1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jButtonNormalize.setText("Normalize");
        jPanel5.add(jButtonNormalize);

        jButton1.setText("Read File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jButtonClose.setText("Close");
        jPanel5.add(jButtonClose);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(350, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(50, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.readWeithgs();
    }//GEN-LAST:event_jButton1ActionPerformed
    public ExitCode getExitCode() {
        return exit;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClose;
    public javax.swing.JButton jButtonNormalize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextFieldCer;
    private javax.swing.JTextField jTextFieldGPCho;
    private javax.swing.JTextField jTextFieldGPEtn;
    private javax.swing.JTextField jTextFieldLysoGPCho;
    private javax.swing.JTextField jTextFieldOtherValue;
    private javax.swing.JTextField jTextFieldOtherValue1;
    private javax.swing.JTextField jTextFieldTAG;
    private javax.swing.JTextField jTextFieldother;
    private javax.swing.JTextField jTextFieldother1;
    // End of variables declaration//GEN-END:variables
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.jButtonNormalize) {
            exit = ExitCode.OK;
            fillStandards();
            dispose();
        } else if (e.getSource() == this.jButtonClose) {
            exit = ExitCode.CANCEL;
            dispose();
        }
    }

    public void reset() {
        try {
            this.jTextFieldCer.setText("0.0");
            this.jTextFieldGPCho.setText("0.0");
            this.jTextFieldGPEtn.setText("0.0");
            this.jTextFieldLysoGPCho.setText("0.0");
            this.jTextFieldTAG.setText("0.0");
            this.jTextFieldother.setText("");
            this.jTextFieldOtherValue.setText("0.0");
            this.jTextFieldother1.setText("");
            this.jTextFieldOtherValue1.setText("0.0");
        } catch (Exception e) {

        }
    }
    
    public void readWeithgs(){
            FileReader fr = null;
            
        try {
            fr = new FileReader(new File("list.csv"));
            BufferedReader br = new BufferedReader(fr);     
            String line;           
            while ((line = (br.readLine())) != null) {
                if (!line.isEmpty()) {
                    String[] w = line.split(",");
                    for(int i = 0; i < this.jTable.getRowCount(); i++){
						w[0] = w[0].replaceAll("_", "").toLowerCase();
                        if(this.jTable.getValueAt(i, 0).toString().replace("_", "").toLowerCase().matches(".*"+w[0]+".*")){
                            this.jTable.setValueAt(Double.valueOf(w[1]), i, 1);
                            break;
                        }
                    }
                }
            }
            fr.close();
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(NormalizationTissueDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
